// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/midmsg.proto

package proto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type NetReqInfo struct {
	M_Body               []byte   `protobuf:"bytes,1,opt,name=m_Body,json=mBody,proto3" json:"m_Body,omitempty"`
	Service              string   `protobuf:"bytes,2,opt,name=service,proto3" json:"service,omitempty"`
	Uuid                 string   `protobuf:"bytes,3,opt,name=uuid,proto3" json:"uuid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NetReqInfo) Reset()         { *m = NetReqInfo{} }
func (m *NetReqInfo) String() string { return proto.CompactTextString(m) }
func (*NetReqInfo) ProtoMessage()    {}
func (*NetReqInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_7304c339219e1145, []int{0}
}

func (m *NetReqInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NetReqInfo.Unmarshal(m, b)
}
func (m *NetReqInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NetReqInfo.Marshal(b, m, deterministic)
}
func (m *NetReqInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetReqInfo.Merge(m, src)
}
func (m *NetReqInfo) XXX_Size() int {
	return xxx_messageInfo_NetReqInfo.Size(m)
}
func (m *NetReqInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_NetReqInfo.DiscardUnknown(m)
}

var xxx_messageInfo_NetReqInfo proto.InternalMessageInfo

func (m *NetReqInfo) GetM_Body() []byte {
	if m != nil {
		return m.M_Body
	}
	return nil
}

func (m *NetReqInfo) GetService() string {
	if m != nil {
		return m.Service
	}
	return ""
}

func (m *NetReqInfo) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

type CallReqInfo struct {
	M_Body               *Net_Pack `protobuf:"bytes,1,opt,name=m_Body,json=mBody,proto3" json:"m_Body,omitempty"`
	Service              string    `protobuf:"bytes,2,opt,name=service,proto3" json:"service,omitempty"`
	Uuid                 string    `protobuf:"bytes,3,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Clientip             string    `protobuf:"bytes,4,opt,name=clientip,proto3" json:"clientip,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *CallReqInfo) Reset()         { *m = CallReqInfo{} }
func (m *CallReqInfo) String() string { return proto.CompactTextString(m) }
func (*CallReqInfo) ProtoMessage()    {}
func (*CallReqInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_7304c339219e1145, []int{1}
}

func (m *CallReqInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CallReqInfo.Unmarshal(m, b)
}
func (m *CallReqInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CallReqInfo.Marshal(b, m, deterministic)
}
func (m *CallReqInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CallReqInfo.Merge(m, src)
}
func (m *CallReqInfo) XXX_Size() int {
	return xxx_messageInfo_CallReqInfo.Size(m)
}
func (m *CallReqInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_CallReqInfo.DiscardUnknown(m)
}

var xxx_messageInfo_CallReqInfo proto.InternalMessageInfo

func (m *CallReqInfo) GetM_Body() *Net_Pack {
	if m != nil {
		return m.M_Body
	}
	return nil
}

func (m *CallReqInfo) GetService() string {
	if m != nil {
		return m.Service
	}
	return ""
}

func (m *CallReqInfo) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *CallReqInfo) GetClientip() string {
	if m != nil {
		return m.Clientip
	}
	return ""
}

type CallRspInfo struct {
	M_Net_Rsp            []byte   `protobuf:"bytes,1,opt,name=m_Net_Rsp,json=mNetRsp,proto3" json:"m_Net_Rsp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CallRspInfo) Reset()         { *m = CallRspInfo{} }
func (m *CallRspInfo) String() string { return proto.CompactTextString(m) }
func (*CallRspInfo) ProtoMessage()    {}
func (*CallRspInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_7304c339219e1145, []int{2}
}

func (m *CallRspInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CallRspInfo.Unmarshal(m, b)
}
func (m *CallRspInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CallRspInfo.Marshal(b, m, deterministic)
}
func (m *CallRspInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CallRspInfo.Merge(m, src)
}
func (m *CallRspInfo) XXX_Size() int {
	return xxx_messageInfo_CallRspInfo.Size(m)
}
func (m *CallRspInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_CallRspInfo.DiscardUnknown(m)
}

var xxx_messageInfo_CallRspInfo proto.InternalMessageInfo

func (m *CallRspInfo) GetM_Net_Rsp() []byte {
	if m != nil {
		return m.M_Net_Rsp
	}
	return nil
}

type NetRspInfo struct {
	M_Net_Rsp            map[uint32]*SendResultInfo `protobuf:"bytes,1,rep,name=m_Net_Rsp,json=mNetRsp,proto3" json:"m_Net_Rsp,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	M_Err                []byte                     `protobuf:"bytes,2,opt,name=m_Err,json=mErr,proto3" json:"m_Err,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *NetRspInfo) Reset()         { *m = NetRspInfo{} }
func (m *NetRspInfo) String() string { return proto.CompactTextString(m) }
func (*NetRspInfo) ProtoMessage()    {}
func (*NetRspInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_7304c339219e1145, []int{3}
}

func (m *NetRspInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NetRspInfo.Unmarshal(m, b)
}
func (m *NetRspInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NetRspInfo.Marshal(b, m, deterministic)
}
func (m *NetRspInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetRspInfo.Merge(m, src)
}
func (m *NetRspInfo) XXX_Size() int {
	return xxx_messageInfo_NetRspInfo.Size(m)
}
func (m *NetRspInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_NetRspInfo.DiscardUnknown(m)
}

var xxx_messageInfo_NetRspInfo proto.InternalMessageInfo

func (m *NetRspInfo) GetM_Net_Rsp() map[uint32]*SendResultInfo {
	if m != nil {
		return m.M_Net_Rsp
	}
	return nil
}

func (m *NetRspInfo) GetM_Err() []byte {
	if m != nil {
		return m.M_Err
	}
	return nil
}

type SendResultInfo struct {
	Key uint32 `protobuf:"varint,1,opt,name=Key,json=key,proto3" json:"Key,omitempty"`
	//    int32     SendCount = 2;       // 发送的数量
	//    int32  SuccessCount = 3;       //  成功的数量
	//    int32     FailCount = 4;       //  失败的数量
	//    int32  DiscardCount = 5;       //  丢弃的数量
	//    int32   ReSendCount = 6;       //  重发的数量
	CheckErr             []byte   `protobuf:"bytes,2,opt,name=CheckErr,json=checkErr,proto3" json:"CheckErr,omitempty"`
	Result               []byte   `protobuf:"bytes,3,opt,name=Result,json=result,proto3" json:"Result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SendResultInfo) Reset()         { *m = SendResultInfo{} }
func (m *SendResultInfo) String() string { return proto.CompactTextString(m) }
func (*SendResultInfo) ProtoMessage()    {}
func (*SendResultInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_7304c339219e1145, []int{4}
}

func (m *SendResultInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendResultInfo.Unmarshal(m, b)
}
func (m *SendResultInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendResultInfo.Marshal(b, m, deterministic)
}
func (m *SendResultInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendResultInfo.Merge(m, src)
}
func (m *SendResultInfo) XXX_Size() int {
	return xxx_messageInfo_SendResultInfo.Size(m)
}
func (m *SendResultInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_SendResultInfo.DiscardUnknown(m)
}

var xxx_messageInfo_SendResultInfo proto.InternalMessageInfo

func (m *SendResultInfo) GetKey() uint32 {
	if m != nil {
		return m.Key
	}
	return 0
}

func (m *SendResultInfo) GetCheckErr() []byte {
	if m != nil {
		return m.CheckErr
	}
	return nil
}

func (m *SendResultInfo) GetResult() []byte {
	if m != nil {
		return m.Result
	}
	return nil
}

type GJ_Net_Pack struct {
	M_Net_Pack           map[uint32]*Net_Pack `protobuf:"bytes,1,rep,name=m_Net_Pack,json=mNetPack,proto3" json:"m_Net_Pack,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *GJ_Net_Pack) Reset()         { *m = GJ_Net_Pack{} }
func (m *GJ_Net_Pack) String() string { return proto.CompactTextString(m) }
func (*GJ_Net_Pack) ProtoMessage()    {}
func (*GJ_Net_Pack) Descriptor() ([]byte, []int) {
	return fileDescriptor_7304c339219e1145, []int{5}
}

func (m *GJ_Net_Pack) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GJ_Net_Pack.Unmarshal(m, b)
}
func (m *GJ_Net_Pack) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GJ_Net_Pack.Marshal(b, m, deterministic)
}
func (m *GJ_Net_Pack) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GJ_Net_Pack.Merge(m, src)
}
func (m *GJ_Net_Pack) XXX_Size() int {
	return xxx_messageInfo_GJ_Net_Pack.Size(m)
}
func (m *GJ_Net_Pack) XXX_DiscardUnknown() {
	xxx_messageInfo_GJ_Net_Pack.DiscardUnknown(m)
}

var xxx_messageInfo_GJ_Net_Pack proto.InternalMessageInfo

func (m *GJ_Net_Pack) GetM_Net_Pack() map[uint32]*Net_Pack {
	if m != nil {
		return m.M_Net_Pack
	}
	return nil
}

type Net_Pack struct {
	M_Msg                []byte                    `protobuf:"bytes,1,opt,name=m_Msg,json=mMsg,proto3" json:"m_Msg,omitempty"`
	M_MsgBody            *Net_Pack_Min_Net_MsgBody `protobuf:"bytes,2,opt,name=m_MsgBody,json=mMsgBody,proto3" json:"m_MsgBody,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *Net_Pack) Reset()         { *m = Net_Pack{} }
func (m *Net_Pack) String() string { return proto.CompactTextString(m) }
func (*Net_Pack) ProtoMessage()    {}
func (*Net_Pack) Descriptor() ([]byte, []int) {
	return fileDescriptor_7304c339219e1145, []int{6}
}

func (m *Net_Pack) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Net_Pack.Unmarshal(m, b)
}
func (m *Net_Pack) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Net_Pack.Marshal(b, m, deterministic)
}
func (m *Net_Pack) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Net_Pack.Merge(m, src)
}
func (m *Net_Pack) XXX_Size() int {
	return xxx_messageInfo_Net_Pack.Size(m)
}
func (m *Net_Pack) XXX_DiscardUnknown() {
	xxx_messageInfo_Net_Pack.DiscardUnknown(m)
}

var xxx_messageInfo_Net_Pack proto.InternalMessageInfo

func (m *Net_Pack) GetM_Msg() []byte {
	if m != nil {
		return m.M_Msg
	}
	return nil
}

func (m *Net_Pack) GetM_MsgBody() *Net_Pack_Min_Net_MsgBody {
	if m != nil {
		return m.M_MsgBody
	}
	return nil
}

type Net_Pack_Min_Net_MsgBody struct {
	MLAsktype            uint64   `protobuf:"varint,1,opt,name=m_lAsktype,json=mLAsktype,proto3" json:"m_lAsktype,omitempty"`
	MLServerSequence     uint64   `protobuf:"varint,2,opt,name=m_lServerSequence,json=mLServerSequence,proto3" json:"m_lServerSequence,omitempty"`
	MLAskSequence        uint64   `protobuf:"varint,3,opt,name=m_lAskSequence,json=mLAskSequence,proto3" json:"m_lAskSequence,omitempty"`
	MCMsgAckType         int32    `protobuf:"varint,4,opt,name=m_cMsgAckType,json=mCMsgAckType,proto3" json:"m_cMsgAckType,omitempty"`
	MCMsgType            int32    `protobuf:"varint,5,opt,name=m_cMsgType,json=mCMsgType,proto3" json:"m_cMsgType,omitempty"`
	MSSendCount          int32    `protobuf:"varint,6,opt,name=m_sSendCount,json=mSSendCount,proto3" json:"m_sSendCount,omitempty"`
	MLExpireTime         uint32   `protobuf:"varint,7,opt,name=m_lExpireTime,json=mLExpireTime,proto3" json:"m_lExpireTime,omitempty"`
	MISendTimeApp        uint64   `protobuf:"varint,8,opt,name=m_iSendTimeApp,json=mISendTimeApp,proto3" json:"m_iSendTimeApp,omitempty"`
	MLResult             int32    `protobuf:"varint,9,opt,name=m_lResult,json=mLResult,proto3" json:"m_lResult,omitempty"`
	MLBack               uint64   `protobuf:"varint,10,opt,name=m_lBack,json=mLBack,proto3" json:"m_lBack,omitempty"`
	MIDiscard            int32    `protobuf:"varint,11,opt,name=m_iDiscard,json=mIDiscard,proto3" json:"m_iDiscard,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Net_Pack_Min_Net_MsgBody) Reset()         { *m = Net_Pack_Min_Net_MsgBody{} }
func (m *Net_Pack_Min_Net_MsgBody) String() string { return proto.CompactTextString(m) }
func (*Net_Pack_Min_Net_MsgBody) ProtoMessage()    {}
func (*Net_Pack_Min_Net_MsgBody) Descriptor() ([]byte, []int) {
	return fileDescriptor_7304c339219e1145, []int{6, 0}
}

func (m *Net_Pack_Min_Net_MsgBody) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Net_Pack_Min_Net_MsgBody.Unmarshal(m, b)
}
func (m *Net_Pack_Min_Net_MsgBody) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Net_Pack_Min_Net_MsgBody.Marshal(b, m, deterministic)
}
func (m *Net_Pack_Min_Net_MsgBody) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Net_Pack_Min_Net_MsgBody.Merge(m, src)
}
func (m *Net_Pack_Min_Net_MsgBody) XXX_Size() int {
	return xxx_messageInfo_Net_Pack_Min_Net_MsgBody.Size(m)
}
func (m *Net_Pack_Min_Net_MsgBody) XXX_DiscardUnknown() {
	xxx_messageInfo_Net_Pack_Min_Net_MsgBody.DiscardUnknown(m)
}

var xxx_messageInfo_Net_Pack_Min_Net_MsgBody proto.InternalMessageInfo

func (m *Net_Pack_Min_Net_MsgBody) GetMLAsktype() uint64 {
	if m != nil {
		return m.MLAsktype
	}
	return 0
}

func (m *Net_Pack_Min_Net_MsgBody) GetMLServerSequence() uint64 {
	if m != nil {
		return m.MLServerSequence
	}
	return 0
}

func (m *Net_Pack_Min_Net_MsgBody) GetMLAskSequence() uint64 {
	if m != nil {
		return m.MLAskSequence
	}
	return 0
}

func (m *Net_Pack_Min_Net_MsgBody) GetMCMsgAckType() int32 {
	if m != nil {
		return m.MCMsgAckType
	}
	return 0
}

func (m *Net_Pack_Min_Net_MsgBody) GetMCMsgType() int32 {
	if m != nil {
		return m.MCMsgType
	}
	return 0
}

func (m *Net_Pack_Min_Net_MsgBody) GetMSSendCount() int32 {
	if m != nil {
		return m.MSSendCount
	}
	return 0
}

func (m *Net_Pack_Min_Net_MsgBody) GetMLExpireTime() uint32 {
	if m != nil {
		return m.MLExpireTime
	}
	return 0
}

func (m *Net_Pack_Min_Net_MsgBody) GetMISendTimeApp() uint64 {
	if m != nil {
		return m.MISendTimeApp
	}
	return 0
}

func (m *Net_Pack_Min_Net_MsgBody) GetMLResult() int32 {
	if m != nil {
		return m.MLResult
	}
	return 0
}

func (m *Net_Pack_Min_Net_MsgBody) GetMLBack() uint64 {
	if m != nil {
		return m.MLBack
	}
	return 0
}

func (m *Net_Pack_Min_Net_MsgBody) GetMIDiscard() int32 {
	if m != nil {
		return m.MIDiscard
	}
	return 0
}

type RegisterInfo struct {
	Sequence             string   `protobuf:"bytes,1,opt,name=sequence,proto3" json:"sequence,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RegisterInfo) Reset()         { *m = RegisterInfo{} }
func (m *RegisterInfo) String() string { return proto.CompactTextString(m) }
func (*RegisterInfo) ProtoMessage()    {}
func (*RegisterInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_7304c339219e1145, []int{7}
}

func (m *RegisterInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterInfo.Unmarshal(m, b)
}
func (m *RegisterInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterInfo.Marshal(b, m, deterministic)
}
func (m *RegisterInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterInfo.Merge(m, src)
}
func (m *RegisterInfo) XXX_Size() int {
	return xxx_messageInfo_RegisterInfo.Size(m)
}
func (m *RegisterInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterInfo.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterInfo proto.InternalMessageInfo

func (m *RegisterInfo) GetSequence() string {
	if m != nil {
		return m.Sequence
	}
	return ""
}

type RegisterReturnInfo struct {
	Success              bool     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Msg                  []byte   `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RegisterReturnInfo) Reset()         { *m = RegisterReturnInfo{} }
func (m *RegisterReturnInfo) String() string { return proto.CompactTextString(m) }
func (*RegisterReturnInfo) ProtoMessage()    {}
func (*RegisterReturnInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_7304c339219e1145, []int{8}
}

func (m *RegisterReturnInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterReturnInfo.Unmarshal(m, b)
}
func (m *RegisterReturnInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterReturnInfo.Marshal(b, m, deterministic)
}
func (m *RegisterReturnInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterReturnInfo.Merge(m, src)
}
func (m *RegisterReturnInfo) XXX_Size() int {
	return xxx_messageInfo_RegisterReturnInfo.Size(m)
}
func (m *RegisterReturnInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterReturnInfo.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterReturnInfo proto.InternalMessageInfo

func (m *RegisterReturnInfo) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *RegisterReturnInfo) GetMsg() []byte {
	if m != nil {
		return m.Msg
	}
	return nil
}

type SubscribeInfo struct {
	Service              string   `protobuf:"bytes,1,opt,name=service,proto3" json:"service,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SubscribeInfo) Reset()         { *m = SubscribeInfo{} }
func (m *SubscribeInfo) String() string { return proto.CompactTextString(m) }
func (*SubscribeInfo) ProtoMessage()    {}
func (*SubscribeInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_7304c339219e1145, []int{9}
}

func (m *SubscribeInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubscribeInfo.Unmarshal(m, b)
}
func (m *SubscribeInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubscribeInfo.Marshal(b, m, deterministic)
}
func (m *SubscribeInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubscribeInfo.Merge(m, src)
}
func (m *SubscribeInfo) XXX_Size() int {
	return xxx_messageInfo_SubscribeInfo.Size(m)
}
func (m *SubscribeInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_SubscribeInfo.DiscardUnknown(m)
}

var xxx_messageInfo_SubscribeInfo proto.InternalMessageInfo

func (m *SubscribeInfo) GetService() string {
	if m != nil {
		return m.Service
	}
	return ""
}

type SubscribeReturnInfo struct {
	Success              bool     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Msg                  []byte   `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SubscribeReturnInfo) Reset()         { *m = SubscribeReturnInfo{} }
func (m *SubscribeReturnInfo) String() string { return proto.CompactTextString(m) }
func (*SubscribeReturnInfo) ProtoMessage()    {}
func (*SubscribeReturnInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_7304c339219e1145, []int{10}
}

func (m *SubscribeReturnInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubscribeReturnInfo.Unmarshal(m, b)
}
func (m *SubscribeReturnInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubscribeReturnInfo.Marshal(b, m, deterministic)
}
func (m *SubscribeReturnInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubscribeReturnInfo.Merge(m, src)
}
func (m *SubscribeReturnInfo) XXX_Size() int {
	return xxx_messageInfo_SubscribeReturnInfo.Size(m)
}
func (m *SubscribeReturnInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_SubscribeReturnInfo.DiscardUnknown(m)
}

var xxx_messageInfo_SubscribeReturnInfo proto.InternalMessageInfo

func (m *SubscribeReturnInfo) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *SubscribeReturnInfo) GetMsg() []byte {
	if m != nil {
		return m.Msg
	}
	return nil
}

type PublishInfo struct {
	Service              string   `protobuf:"bytes,1,opt,name=service,proto3" json:"service,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PublishInfo) Reset()         { *m = PublishInfo{} }
func (m *PublishInfo) String() string { return proto.CompactTextString(m) }
func (*PublishInfo) ProtoMessage()    {}
func (*PublishInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_7304c339219e1145, []int{11}
}

func (m *PublishInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PublishInfo.Unmarshal(m, b)
}
func (m *PublishInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PublishInfo.Marshal(b, m, deterministic)
}
func (m *PublishInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PublishInfo.Merge(m, src)
}
func (m *PublishInfo) XXX_Size() int {
	return xxx_messageInfo_PublishInfo.Size(m)
}
func (m *PublishInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_PublishInfo.DiscardUnknown(m)
}

var xxx_messageInfo_PublishInfo proto.InternalMessageInfo

func (m *PublishInfo) GetService() string {
	if m != nil {
		return m.Service
	}
	return ""
}

type PublishReturnInfo struct {
	Success              bool     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Msg                  []byte   `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PublishReturnInfo) Reset()         { *m = PublishReturnInfo{} }
func (m *PublishReturnInfo) String() string { return proto.CompactTextString(m) }
func (*PublishReturnInfo) ProtoMessage()    {}
func (*PublishReturnInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_7304c339219e1145, []int{12}
}

func (m *PublishReturnInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PublishReturnInfo.Unmarshal(m, b)
}
func (m *PublishReturnInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PublishReturnInfo.Marshal(b, m, deterministic)
}
func (m *PublishReturnInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PublishReturnInfo.Merge(m, src)
}
func (m *PublishReturnInfo) XXX_Size() int {
	return xxx_messageInfo_PublishReturnInfo.Size(m)
}
func (m *PublishReturnInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_PublishReturnInfo.DiscardUnknown(m)
}

var xxx_messageInfo_PublishReturnInfo proto.InternalMessageInfo

func (m *PublishReturnInfo) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *PublishReturnInfo) GetMsg() []byte {
	if m != nil {
		return m.Msg
	}
	return nil
}

func init() {
	proto.RegisterType((*NetReqInfo)(nil), "proto.NetReqInfo")
	proto.RegisterType((*CallReqInfo)(nil), "proto.CallReqInfo")
	proto.RegisterType((*CallRspInfo)(nil), "proto.CallRspInfo")
	proto.RegisterType((*NetRspInfo)(nil), "proto.NetRspInfo")
	proto.RegisterMapType((map[uint32]*SendResultInfo)(nil), "proto.NetRspInfo.MNetRspEntry")
	proto.RegisterType((*SendResultInfo)(nil), "proto.SendResultInfo")
	proto.RegisterType((*GJ_Net_Pack)(nil), "proto.GJ_Net_Pack")
	proto.RegisterMapType((map[uint32]*Net_Pack)(nil), "proto.GJ_Net_Pack.MNetPackEntry")
	proto.RegisterType((*Net_Pack)(nil), "proto.Net_Pack")
	proto.RegisterType((*Net_Pack_Min_Net_MsgBody)(nil), "proto.Net_Pack.Min_Net_MsgBody")
	proto.RegisterType((*RegisterInfo)(nil), "proto.RegisterInfo")
	proto.RegisterType((*RegisterReturnInfo)(nil), "proto.RegisterReturnInfo")
	proto.RegisterType((*SubscribeInfo)(nil), "proto.SubscribeInfo")
	proto.RegisterType((*SubscribeReturnInfo)(nil), "proto.SubscribeReturnInfo")
	proto.RegisterType((*PublishInfo)(nil), "proto.PublishInfo")
	proto.RegisterType((*PublishReturnInfo)(nil), "proto.PublishReturnInfo")
}

func init() { proto.RegisterFile("proto/midmsg.proto", fileDescriptor_7304c339219e1145) }

var fileDescriptor_7304c339219e1145 = []byte{
	// 837 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x55, 0xdd, 0x6e, 0xe3, 0x44,
	0x14, 0x5e, 0x37, 0x4e, 0xe2, 0x1c, 0x3b, 0xbb, 0x9b, 0x29, 0x0b, 0xc6, 0x08, 0x28, 0x46, 0x0b,
	0x5d, 0x56, 0xca, 0xa2, 0xec, 0x05, 0xb0, 0x5a, 0xb1, 0xa4, 0x21, 0x42, 0x85, 0xa4, 0x6a, 0x27,
	0x15, 0xb7, 0x56, 0xe2, 0x0c, 0xa9, 0x15, 0x8f, 0xe3, 0xce, 0xd8, 0x85, 0x70, 0xc3, 0x0b, 0xf0,
	0x06, 0xbc, 0x04, 0x0f, 0xc4, 0x23, 0xf0, 0x10, 0x68, 0x7e, 0xec, 0xd8, 0x29, 0x12, 0xa5, 0x57,
	0x99, 0xf3, 0xcd, 0x77, 0xfe, 0xbe, 0x39, 0x39, 0x06, 0x94, 0xb2, 0x4d, 0xb6, 0x79, 0x41, 0xa3,
	0x25, 0xe5, 0xab, 0xbe, 0x34, 0x50, 0x53, 0xfe, 0xf8, 0x17, 0x00, 0x67, 0x24, 0xc3, 0xe4, 0xfa,
	0x34, 0xf9, 0x69, 0x83, 0x9e, 0x40, 0x8b, 0x06, 0x27, 0x9b, 0xe5, 0xd6, 0x35, 0x8e, 0x8c, 0x63,
	0x07, 0x37, 0xa9, 0x30, 0x90, 0x0b, 0x6d, 0x4e, 0xd8, 0x4d, 0x14, 0x12, 0xf7, 0xe0, 0xc8, 0x38,
	0xee, 0xe0, 0xc2, 0x44, 0x08, 0xcc, 0x3c, 0x8f, 0x96, 0x6e, 0x43, 0xc2, 0xf2, 0xec, 0xff, 0x06,
	0xf6, 0x68, 0x1e, 0xc7, 0x45, 0xcc, 0x4f, 0x6a, 0x31, 0xed, 0xc1, 0x23, 0x55, 0x40, 0xff, 0x8c,
	0x64, 0xc1, 0xf9, 0x3c, 0x5c, 0xdf, 0x2b, 0x09, 0xf2, 0xc0, 0x0a, 0xe3, 0x88, 0x24, 0x59, 0x94,
	0xba, 0xa6, 0xc4, 0x4b, 0xdb, 0x7f, 0xa6, 0x0b, 0xe0, 0xa9, 0x2c, 0xc0, 0x83, 0x0e, 0x0d, 0x44,
	0x36, 0xcc, 0x53, 0xdd, 0x57, 0x9b, 0x8a, 0xa6, 0x79, 0xea, 0xff, 0x69, 0xa8, 0xfe, 0x35, 0xf5,
	0x55, 0x9d, 0xda, 0x38, 0xb6, 0x07, 0x1f, 0xec, 0xca, 0xd5, 0xac, 0xfe, 0x54, 0x9d, 0xc7, 0x49,
	0xc6, 0xb6, 0x65, 0x28, 0x74, 0x08, 0x4d, 0x1a, 0x8c, 0x19, 0x93, 0xd5, 0x3b, 0xd8, 0xa4, 0x63,
	0xc6, 0xbc, 0x0b, 0x70, 0xaa, 0x6c, 0xf4, 0x18, 0x1a, 0x6b, 0xa2, 0x94, 0xe8, 0x62, 0x71, 0x44,
	0xcf, 0xa1, 0x79, 0x33, 0x8f, 0x73, 0xd5, 0xb4, 0x3d, 0x78, 0xa2, 0xd3, 0xcd, 0x48, 0xb2, 0xc4,
	0x84, 0xe7, 0x71, 0x26, 0x52, 0x62, 0xc5, 0x79, 0x75, 0xf0, 0xa5, 0xe1, 0xff, 0x08, 0x0f, 0xeb,
	0x97, 0x22, 0xe8, 0x0f, 0xf5, 0xa0, 0x1e, 0x58, 0xa3, 0x2b, 0x12, 0xae, 0x77, 0xe5, 0x58, 0xa1,
	0xb6, 0xd1, 0xdb, 0xd0, 0x52, 0xbe, 0x52, 0x4f, 0x07, 0xb7, 0x98, 0xb4, 0xfc, 0x3f, 0x0c, 0xb0,
	0xbf, 0xfb, 0x3e, 0x28, 0x9e, 0x05, 0x7d, 0x0d, 0x40, 0x4b, 0x4b, 0x8b, 0x71, 0xa4, 0xab, 0xab,
	0xf0, 0xa4, 0x1a, 0xe2, 0xa0, 0xe4, 0xb0, 0xa8, 0x36, 0xbd, 0x09, 0x74, 0x6b, 0x57, 0xff, 0xd2,
	0xfb, 0xd3, 0x7a, 0xef, 0xb7, 0x27, 0x63, 0xd7, 0xf5, 0xdf, 0x0d, 0xb0, 0xca, 0xd2, 0xa4, 0xd4,
	0x53, 0xbe, 0xd2, 0xaf, 0x69, 0xd2, 0x29, 0x5f, 0xa1, 0xd7, 0xe2, 0xed, 0xa6, 0x7c, 0x25, 0x47,
	0x4d, 0x05, 0xfc, 0x70, 0x2f, 0x60, 0x7f, 0x1a, 0x25, 0xb2, 0x70, 0x4d, 0xc3, 0x16, 0xd5, 0x27,
	0xef, 0xf7, 0x06, 0x3c, 0xda, 0xbb, 0x45, 0xef, 0x0b, 0x05, 0xe2, 0x21, 0x5f, 0x67, 0xdb, 0x94,
	0xc8, 0x5c, 0x26, 0xee, 0xd0, 0x89, 0x06, 0xd0, 0x73, 0xe8, 0xd1, 0x20, 0x9e, 0x11, 0x76, 0x43,
	0xd8, 0x8c, 0x5c, 0xe7, 0x24, 0xd1, 0xa3, 0x6b, 0xe2, 0xc7, 0x74, 0x52, 0xc7, 0xd1, 0x53, 0x78,
	0xa8, 0x62, 0x95, 0xcc, 0x86, 0x64, 0x76, 0x65, 0xbc, 0x92, 0xf6, 0x31, 0x74, 0x69, 0x10, 0x4e,
	0xf9, 0x6a, 0x18, 0xae, 0x2f, 0x45, 0x56, 0x31, 0xdb, 0x4d, 0xec, 0xd0, 0xd1, 0x0e, 0x53, 0x75,
	0x09, 0x92, 0x64, 0x34, 0x25, 0xa3, 0x23, 0x19, 0xf2, 0xfa, 0x23, 0x70, 0x68, 0xc0, 0xc5, 0x8c,
	0x8c, 0x36, 0x79, 0x92, 0xb9, 0x2d, 0x49, 0xb0, 0xe9, 0xac, 0x84, 0x54, 0x9a, 0x78, 0xfc, 0x4b,
	0x1a, 0x31, 0x72, 0x19, 0x51, 0xe2, 0xb6, 0xe5, 0xa3, 0x38, 0x74, 0xb2, 0xc3, 0x54, 0xc9, 0x91,
	0x70, 0x12, 0xe6, 0x30, 0x4d, 0x5d, 0x4b, 0x97, 0x7c, 0x5a, 0x01, 0xd1, 0x7b, 0x42, 0xf7, 0x58,
	0x8f, 0x54, 0x47, 0xe6, 0xb2, 0xe8, 0x44, 0xd9, 0xe8, 0x1d, 0x68, 0xd3, 0x20, 0x3e, 0x11, 0x13,
	0x04, 0xd2, 0xb9, 0x45, 0x27, 0xc2, 0x52, 0x3d, 0x44, 0xdf, 0x46, 0x3c, 0x9c, 0xb3, 0xa5, 0x6b,
	0xeb, 0x1e, 0x4e, 0x35, 0xe0, 0x7f, 0x06, 0x0e, 0x26, 0xab, 0x88, 0x67, 0x84, 0xe9, 0xff, 0xb0,
	0xc5, 0x0b, 0xe1, 0x0c, 0xf5, 0x77, 0x2f, 0x6c, 0xff, 0x1b, 0x40, 0x05, 0x17, 0x93, 0x2c, 0x67,
	0x89, 0xf4, 0x10, 0xeb, 0x24, 0x0f, 0x43, 0xc2, 0xb9, 0x74, 0xb0, 0x70, 0x61, 0x8a, 0x39, 0xa4,
	0x7c, 0xa5, 0xff, 0x17, 0xe2, 0xe8, 0x3f, 0x83, 0xee, 0x2c, 0x5f, 0xf0, 0x90, 0x45, 0x0b, 0x52,
	0x3a, 0xeb, 0x5d, 0x64, 0xd4, 0x76, 0x91, 0x3f, 0x84, 0xc3, 0x92, 0x7a, 0xcf, 0x6c, 0x9f, 0x82,
	0x7d, 0x9e, 0x2f, 0xe2, 0x88, 0x5f, 0xfd, 0x47, 0xae, 0x37, 0xd0, 0xd3, 0xc4, 0xfb, 0x65, 0x1a,
	0xfc, 0x75, 0x00, 0x30, 0x8d, 0x96, 0x33, 0xbd, 0x47, 0xfb, 0x60, 0xce, 0xb6, 0x49, 0x88, 0x7a,
	0x95, 0x95, 0xa6, 0x96, 0xb4, 0xd7, 0xbb, 0xb5, 0xe5, 0xfc, 0x07, 0xe8, 0x05, 0x34, 0x87, 0xfc,
	0xff, 0x38, 0xbc, 0x84, 0xce, 0x09, 0xdb, 0xcc, 0x97, 0xe1, 0x9c, 0x67, 0x77, 0x76, 0x7a, 0x0d,
	0x56, 0xf1, 0x7c, 0xe8, 0x50, 0x13, 0xaa, 0x6f, 0xef, 0xbd, 0xbb, 0x07, 0xee, 0xc4, 0xf0, 0x1f,
	0xa0, 0xaf, 0xa0, 0xad, 0x35, 0x42, 0x48, 0xf3, 0x2a, 0xe2, 0x7a, 0x6e, 0x1d, 0xab, 0xb9, 0xbe,
	0x81, 0x4e, 0xf9, 0x94, 0xe8, 0xad, 0x62, 0xef, 0x56, 0xe7, 0xc0, 0xf3, 0xf6, 0xd1, 0x6a, 0x80,
	0xc1, 0xaf, 0xd0, 0x1d, 0xc9, 0x6f, 0x4e, 0x21, 0xf0, 0xe7, 0x60, 0x8a, 0x0f, 0x4f, 0x59, 0x49,
	0xe5, 0x33, 0xe8, 0xd5, 0xb0, 0xb2, 0xf9, 0x2f, 0xc0, 0x96, 0x12, 0x0f, 0x13, 0xfe, 0x33, 0x61,
	0x77, 0x77, 0x5c, 0xb4, 0x24, 0xf8, 0xf2, 0x9f, 0x00, 0x00, 0x00, 0xff, 0xff, 0xd5, 0xa0, 0x24,
	0xbd, 0xdb, 0x07, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MidServiceClient is the client API for MidService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MidServiceClient interface {
	Sync(ctx context.Context, in *NetReqInfo, opts ...grpc.CallOption) (*NetRspInfo, error)
	Async(ctx context.Context, in *NetReqInfo, opts ...grpc.CallOption) (*NetRspInfo, error)
	Broadcast(ctx context.Context, in *NetReqInfo, opts ...grpc.CallOption) (*NetRspInfo, error)
	Register(ctx context.Context, in *RegisterInfo, opts ...grpc.CallOption) (*RegisterReturnInfo, error)
	Publish(ctx context.Context, in *PublishInfo, opts ...grpc.CallOption) (*PublishReturnInfo, error)
	Subscribe(ctx context.Context, in *SubscribeInfo, opts ...grpc.CallOption) (*SubscribeReturnInfo, error)
}

type midServiceClient struct {
	cc *grpc.ClientConn
}

func NewMidServiceClient(cc *grpc.ClientConn) MidServiceClient {
	return &midServiceClient{cc}
}

func (c *midServiceClient) Sync(ctx context.Context, in *NetReqInfo, opts ...grpc.CallOption) (*NetRspInfo, error) {
	out := new(NetRspInfo)
	err := c.cc.Invoke(ctx, "/proto.MidService/Sync", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *midServiceClient) Async(ctx context.Context, in *NetReqInfo, opts ...grpc.CallOption) (*NetRspInfo, error) {
	out := new(NetRspInfo)
	err := c.cc.Invoke(ctx, "/proto.MidService/Async", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *midServiceClient) Broadcast(ctx context.Context, in *NetReqInfo, opts ...grpc.CallOption) (*NetRspInfo, error) {
	out := new(NetRspInfo)
	err := c.cc.Invoke(ctx, "/proto.MidService/Broadcast", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *midServiceClient) Register(ctx context.Context, in *RegisterInfo, opts ...grpc.CallOption) (*RegisterReturnInfo, error) {
	out := new(RegisterReturnInfo)
	err := c.cc.Invoke(ctx, "/proto.MidService/Register", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *midServiceClient) Publish(ctx context.Context, in *PublishInfo, opts ...grpc.CallOption) (*PublishReturnInfo, error) {
	out := new(PublishReturnInfo)
	err := c.cc.Invoke(ctx, "/proto.MidService/Publish", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *midServiceClient) Subscribe(ctx context.Context, in *SubscribeInfo, opts ...grpc.CallOption) (*SubscribeReturnInfo, error) {
	out := new(SubscribeReturnInfo)
	err := c.cc.Invoke(ctx, "/proto.MidService/Subscribe", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MidServiceServer is the server API for MidService service.
type MidServiceServer interface {
	Sync(context.Context, *NetReqInfo) (*NetRspInfo, error)
	Async(context.Context, *NetReqInfo) (*NetRspInfo, error)
	Broadcast(context.Context, *NetReqInfo) (*NetRspInfo, error)
	Register(context.Context, *RegisterInfo) (*RegisterReturnInfo, error)
	Publish(context.Context, *PublishInfo) (*PublishReturnInfo, error)
	Subscribe(context.Context, *SubscribeInfo) (*SubscribeReturnInfo, error)
}

// UnimplementedMidServiceServer can be embedded to have forward compatible implementations.
type UnimplementedMidServiceServer struct {
}

func (*UnimplementedMidServiceServer) Sync(ctx context.Context, req *NetReqInfo) (*NetRspInfo, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Sync not implemented")
}
func (*UnimplementedMidServiceServer) Async(ctx context.Context, req *NetReqInfo) (*NetRspInfo, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Async not implemented")
}
func (*UnimplementedMidServiceServer) Broadcast(ctx context.Context, req *NetReqInfo) (*NetRspInfo, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Broadcast not implemented")
}
func (*UnimplementedMidServiceServer) Register(ctx context.Context, req *RegisterInfo) (*RegisterReturnInfo, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Register not implemented")
}
func (*UnimplementedMidServiceServer) Publish(ctx context.Context, req *PublishInfo) (*PublishReturnInfo, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Publish not implemented")
}
func (*UnimplementedMidServiceServer) Subscribe(ctx context.Context, req *SubscribeInfo) (*SubscribeReturnInfo, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Subscribe not implemented")
}

func RegisterMidServiceServer(s *grpc.Server, srv MidServiceServer) {
	s.RegisterService(&_MidService_serviceDesc, srv)
}

func _MidService_Sync_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NetReqInfo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MidServiceServer).Sync(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.MidService/Sync",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MidServiceServer).Sync(ctx, req.(*NetReqInfo))
	}
	return interceptor(ctx, in, info, handler)
}

func _MidService_Async_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NetReqInfo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MidServiceServer).Async(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.MidService/Async",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MidServiceServer).Async(ctx, req.(*NetReqInfo))
	}
	return interceptor(ctx, in, info, handler)
}

func _MidService_Broadcast_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NetReqInfo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MidServiceServer).Broadcast(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.MidService/Broadcast",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MidServiceServer).Broadcast(ctx, req.(*NetReqInfo))
	}
	return interceptor(ctx, in, info, handler)
}

func _MidService_Register_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RegisterInfo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MidServiceServer).Register(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.MidService/Register",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MidServiceServer).Register(ctx, req.(*RegisterInfo))
	}
	return interceptor(ctx, in, info, handler)
}

func _MidService_Publish_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PublishInfo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MidServiceServer).Publish(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.MidService/Publish",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MidServiceServer).Publish(ctx, req.(*PublishInfo))
	}
	return interceptor(ctx, in, info, handler)
}

func _MidService_Subscribe_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SubscribeInfo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MidServiceServer).Subscribe(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.MidService/Subscribe",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MidServiceServer).Subscribe(ctx, req.(*SubscribeInfo))
	}
	return interceptor(ctx, in, info, handler)
}

var _MidService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.MidService",
	HandlerType: (*MidServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Sync",
			Handler:    _MidService_Sync_Handler,
		},
		{
			MethodName: "Async",
			Handler:    _MidService_Async_Handler,
		},
		{
			MethodName: "Broadcast",
			Handler:    _MidService_Broadcast_Handler,
		},
		{
			MethodName: "Register",
			Handler:    _MidService_Register_Handler,
		},
		{
			MethodName: "Publish",
			Handler:    _MidService_Publish_Handler,
		},
		{
			MethodName: "Subscribe",
			Handler:    _MidService_Subscribe_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/midmsg.proto",
}

// ClientServiceClient is the client API for ClientService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ClientServiceClient interface {
	Call(ctx context.Context, in *CallReqInfo, opts ...grpc.CallOption) (*CallRspInfo, error)
	AsyncAnswer(ctx context.Context, in *CallReqInfo, opts ...grpc.CallOption) (*CallRspInfo, error)
}

type clientServiceClient struct {
	cc *grpc.ClientConn
}

func NewClientServiceClient(cc *grpc.ClientConn) ClientServiceClient {
	return &clientServiceClient{cc}
}

func (c *clientServiceClient) Call(ctx context.Context, in *CallReqInfo, opts ...grpc.CallOption) (*CallRspInfo, error) {
	out := new(CallRspInfo)
	err := c.cc.Invoke(ctx, "/proto.ClientService/Call", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clientServiceClient) AsyncAnswer(ctx context.Context, in *CallReqInfo, opts ...grpc.CallOption) (*CallRspInfo, error) {
	out := new(CallRspInfo)
	err := c.cc.Invoke(ctx, "/proto.ClientService/AsyncAnswer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ClientServiceServer is the server API for ClientService service.
type ClientServiceServer interface {
	Call(context.Context, *CallReqInfo) (*CallRspInfo, error)
	AsyncAnswer(context.Context, *CallReqInfo) (*CallRspInfo, error)
}

// UnimplementedClientServiceServer can be embedded to have forward compatible implementations.
type UnimplementedClientServiceServer struct {
}

func (*UnimplementedClientServiceServer) Call(ctx context.Context, req *CallReqInfo) (*CallRspInfo, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Call not implemented")
}
func (*UnimplementedClientServiceServer) AsyncAnswer(ctx context.Context, req *CallReqInfo) (*CallRspInfo, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AsyncAnswer not implemented")
}

func RegisterClientServiceServer(s *grpc.Server, srv ClientServiceServer) {
	s.RegisterService(&_ClientService_serviceDesc, srv)
}

func _ClientService_Call_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CallReqInfo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClientServiceServer).Call(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ClientService/Call",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClientServiceServer).Call(ctx, req.(*CallReqInfo))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClientService_AsyncAnswer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CallReqInfo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClientServiceServer).AsyncAnswer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ClientService/AsyncAnswer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClientServiceServer).AsyncAnswer(ctx, req.(*CallReqInfo))
	}
	return interceptor(ctx, in, info, handler)
}

var _ClientService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.ClientService",
	HandlerType: (*ClientServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Call",
			Handler:    _ClientService_Call_Handler,
		},
		{
			MethodName: "AsyncAnswer",
			Handler:    _ClientService_AsyncAnswer_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/midmsg.proto",
}
