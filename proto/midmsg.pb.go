// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/midmsg.proto

package proto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type NetReqInfo struct {
	M_Body               []byte   `protobuf:"bytes,1,opt,name=m_Body,json=mBody,proto3" json:"m_Body,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NetReqInfo) Reset()         { *m = NetReqInfo{} }
func (m *NetReqInfo) String() string { return proto.CompactTextString(m) }
func (*NetReqInfo) ProtoMessage()    {}
func (*NetReqInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_7304c339219e1145, []int{0}
}

func (m *NetReqInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NetReqInfo.Unmarshal(m, b)
}
func (m *NetReqInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NetReqInfo.Marshal(b, m, deterministic)
}
func (m *NetReqInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetReqInfo.Merge(m, src)
}
func (m *NetReqInfo) XXX_Size() int {
	return xxx_messageInfo_NetReqInfo.Size(m)
}
func (m *NetReqInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_NetReqInfo.DiscardUnknown(m)
}

var xxx_messageInfo_NetReqInfo proto.InternalMessageInfo

func (m *NetReqInfo) GetM_Body() []byte {
	if m != nil {
		return m.M_Body
	}
	return nil
}

type NetRspInfo struct {
	M_Resp               []byte   `protobuf:"bytes,1,opt,name=m_Resp,json=mResp,proto3" json:"m_Resp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NetRspInfo) Reset()         { *m = NetRspInfo{} }
func (m *NetRspInfo) String() string { return proto.CompactTextString(m) }
func (*NetRspInfo) ProtoMessage()    {}
func (*NetRspInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_7304c339219e1145, []int{1}
}

func (m *NetRspInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NetRspInfo.Unmarshal(m, b)
}
func (m *NetRspInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NetRspInfo.Marshal(b, m, deterministic)
}
func (m *NetRspInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetRspInfo.Merge(m, src)
}
func (m *NetRspInfo) XXX_Size() int {
	return xxx_messageInfo_NetRspInfo.Size(m)
}
func (m *NetRspInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_NetRspInfo.DiscardUnknown(m)
}

var xxx_messageInfo_NetRspInfo proto.InternalMessageInfo

func (m *NetRspInfo) GetM_Resp() []byte {
	if m != nil {
		return m.M_Resp
	}
	return nil
}

type ClientRsqInfo struct {
	M_Resp               []byte   `protobuf:"bytes,1,opt,name=m_Resp,json=mResp,proto3" json:"m_Resp,omitempty"`
	M_Type               uint32   `protobuf:"varint,2,opt,name=m_Type,json=mType,proto3" json:"m_Type,omitempty"`
	M_RqId               string   `protobuf:"bytes,3,opt,name=m_RqId,json=mRqId,proto3" json:"m_RqId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ClientRsqInfo) Reset()         { *m = ClientRsqInfo{} }
func (m *ClientRsqInfo) String() string { return proto.CompactTextString(m) }
func (*ClientRsqInfo) ProtoMessage()    {}
func (*ClientRsqInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_7304c339219e1145, []int{2}
}

func (m *ClientRsqInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClientRsqInfo.Unmarshal(m, b)
}
func (m *ClientRsqInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClientRsqInfo.Marshal(b, m, deterministic)
}
func (m *ClientRsqInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClientRsqInfo.Merge(m, src)
}
func (m *ClientRsqInfo) XXX_Size() int {
	return xxx_messageInfo_ClientRsqInfo.Size(m)
}
func (m *ClientRsqInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ClientRsqInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ClientRsqInfo proto.InternalMessageInfo

func (m *ClientRsqInfo) GetM_Resp() []byte {
	if m != nil {
		return m.M_Resp
	}
	return nil
}

func (m *ClientRsqInfo) GetM_Type() uint32 {
	if m != nil {
		return m.M_Type
	}
	return 0
}

func (m *ClientRsqInfo) GetM_RqId() string {
	if m != nil {
		return m.M_RqId
	}
	return ""
}

type GJ_Net_Pack struct {
	M_Net_Pack           map[uint32]*GJ_Net_Pack_Net_Pack `protobuf:"bytes,1,rep,name=m_Net_Pack,json=mNetPack,proto3" json:"m_Net_Pack,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}                         `json:"-"`
	XXX_unrecognized     []byte                           `json:"-"`
	XXX_sizecache        int32                            `json:"-"`
}

func (m *GJ_Net_Pack) Reset()         { *m = GJ_Net_Pack{} }
func (m *GJ_Net_Pack) String() string { return proto.CompactTextString(m) }
func (*GJ_Net_Pack) ProtoMessage()    {}
func (*GJ_Net_Pack) Descriptor() ([]byte, []int) {
	return fileDescriptor_7304c339219e1145, []int{3}
}

func (m *GJ_Net_Pack) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GJ_Net_Pack.Unmarshal(m, b)
}
func (m *GJ_Net_Pack) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GJ_Net_Pack.Marshal(b, m, deterministic)
}
func (m *GJ_Net_Pack) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GJ_Net_Pack.Merge(m, src)
}
func (m *GJ_Net_Pack) XXX_Size() int {
	return xxx_messageInfo_GJ_Net_Pack.Size(m)
}
func (m *GJ_Net_Pack) XXX_DiscardUnknown() {
	xxx_messageInfo_GJ_Net_Pack.DiscardUnknown(m)
}

var xxx_messageInfo_GJ_Net_Pack proto.InternalMessageInfo

func (m *GJ_Net_Pack) GetM_Net_Pack() map[uint32]*GJ_Net_Pack_Net_Pack {
	if m != nil {
		return m.M_Net_Pack
	}
	return nil
}

type GJ_Net_Pack_Net_Pack struct {
	M_Msg                []byte                                `protobuf:"bytes,1,opt,name=m_Msg,json=mMsg,proto3" json:"m_Msg,omitempty"`
	M_MsgBody            *GJ_Net_Pack_Net_Pack_Min_Net_MsgBody `protobuf:"bytes,2,opt,name=m_MsgBody,json=mMsgBody,proto3" json:"m_MsgBody,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                              `json:"-"`
	XXX_unrecognized     []byte                                `json:"-"`
	XXX_sizecache        int32                                 `json:"-"`
}

func (m *GJ_Net_Pack_Net_Pack) Reset()         { *m = GJ_Net_Pack_Net_Pack{} }
func (m *GJ_Net_Pack_Net_Pack) String() string { return proto.CompactTextString(m) }
func (*GJ_Net_Pack_Net_Pack) ProtoMessage()    {}
func (*GJ_Net_Pack_Net_Pack) Descriptor() ([]byte, []int) {
	return fileDescriptor_7304c339219e1145, []int{3, 0}
}

func (m *GJ_Net_Pack_Net_Pack) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GJ_Net_Pack_Net_Pack.Unmarshal(m, b)
}
func (m *GJ_Net_Pack_Net_Pack) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GJ_Net_Pack_Net_Pack.Marshal(b, m, deterministic)
}
func (m *GJ_Net_Pack_Net_Pack) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GJ_Net_Pack_Net_Pack.Merge(m, src)
}
func (m *GJ_Net_Pack_Net_Pack) XXX_Size() int {
	return xxx_messageInfo_GJ_Net_Pack_Net_Pack.Size(m)
}
func (m *GJ_Net_Pack_Net_Pack) XXX_DiscardUnknown() {
	xxx_messageInfo_GJ_Net_Pack_Net_Pack.DiscardUnknown(m)
}

var xxx_messageInfo_GJ_Net_Pack_Net_Pack proto.InternalMessageInfo

func (m *GJ_Net_Pack_Net_Pack) GetM_Msg() []byte {
	if m != nil {
		return m.M_Msg
	}
	return nil
}

func (m *GJ_Net_Pack_Net_Pack) GetM_MsgBody() *GJ_Net_Pack_Net_Pack_Min_Net_MsgBody {
	if m != nil {
		return m.M_MsgBody
	}
	return nil
}

type GJ_Net_Pack_Net_Pack_Min_Net_MsgBody struct {
	MLAsktype            uint64   `protobuf:"varint,1,opt,name=m_lAsktype,json=mLAsktype,proto3" json:"m_lAsktype,omitempty"`
	MLServerSequence     uint64   `protobuf:"varint,2,opt,name=m_lServerSequence,json=mLServerSequence,proto3" json:"m_lServerSequence,omitempty"`
	MLAskSequence        uint64   `protobuf:"varint,3,opt,name=m_lAskSequence,json=mLAskSequence,proto3" json:"m_lAskSequence,omitempty"`
	MCMsgAckType         int32    `protobuf:"varint,4,opt,name=m_cMsgAckType,json=mCMsgAckType,proto3" json:"m_cMsgAckType,omitempty"`
	MCMsgType            int32    `protobuf:"varint,5,opt,name=m_cMsgType,json=mCMsgType,proto3" json:"m_cMsgType,omitempty"`
	MSSendCount          int32    `protobuf:"varint,6,opt,name=m_sSendCount,json=mSSendCount,proto3" json:"m_sSendCount,omitempty"`
	MLExpireTime         uint32   `protobuf:"varint,7,opt,name=m_lExpireTime,json=mLExpireTime,proto3" json:"m_lExpireTime,omitempty"`
	MISendTimeApp        uint64   `protobuf:"varint,8,opt,name=m_iSendTimeApp,json=mISendTimeApp,proto3" json:"m_iSendTimeApp,omitempty"`
	MLResult             int32    `protobuf:"varint,9,opt,name=m_lResult,json=mLResult,proto3" json:"m_lResult,omitempty"`
	MLBack               uint64   `protobuf:"varint,10,opt,name=m_lBack,json=mLBack,proto3" json:"m_lBack,omitempty"`
	MIDiscard            int32    `protobuf:"varint,11,opt,name=m_iDiscard,json=mIDiscard,proto3" json:"m_iDiscard,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GJ_Net_Pack_Net_Pack_Min_Net_MsgBody) Reset()         { *m = GJ_Net_Pack_Net_Pack_Min_Net_MsgBody{} }
func (m *GJ_Net_Pack_Net_Pack_Min_Net_MsgBody) String() string { return proto.CompactTextString(m) }
func (*GJ_Net_Pack_Net_Pack_Min_Net_MsgBody) ProtoMessage()    {}
func (*GJ_Net_Pack_Net_Pack_Min_Net_MsgBody) Descriptor() ([]byte, []int) {
	return fileDescriptor_7304c339219e1145, []int{3, 0, 0}
}

func (m *GJ_Net_Pack_Net_Pack_Min_Net_MsgBody) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GJ_Net_Pack_Net_Pack_Min_Net_MsgBody.Unmarshal(m, b)
}
func (m *GJ_Net_Pack_Net_Pack_Min_Net_MsgBody) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GJ_Net_Pack_Net_Pack_Min_Net_MsgBody.Marshal(b, m, deterministic)
}
func (m *GJ_Net_Pack_Net_Pack_Min_Net_MsgBody) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GJ_Net_Pack_Net_Pack_Min_Net_MsgBody.Merge(m, src)
}
func (m *GJ_Net_Pack_Net_Pack_Min_Net_MsgBody) XXX_Size() int {
	return xxx_messageInfo_GJ_Net_Pack_Net_Pack_Min_Net_MsgBody.Size(m)
}
func (m *GJ_Net_Pack_Net_Pack_Min_Net_MsgBody) XXX_DiscardUnknown() {
	xxx_messageInfo_GJ_Net_Pack_Net_Pack_Min_Net_MsgBody.DiscardUnknown(m)
}

var xxx_messageInfo_GJ_Net_Pack_Net_Pack_Min_Net_MsgBody proto.InternalMessageInfo

func (m *GJ_Net_Pack_Net_Pack_Min_Net_MsgBody) GetMLAsktype() uint64 {
	if m != nil {
		return m.MLAsktype
	}
	return 0
}

func (m *GJ_Net_Pack_Net_Pack_Min_Net_MsgBody) GetMLServerSequence() uint64 {
	if m != nil {
		return m.MLServerSequence
	}
	return 0
}

func (m *GJ_Net_Pack_Net_Pack_Min_Net_MsgBody) GetMLAskSequence() uint64 {
	if m != nil {
		return m.MLAskSequence
	}
	return 0
}

func (m *GJ_Net_Pack_Net_Pack_Min_Net_MsgBody) GetMCMsgAckType() int32 {
	if m != nil {
		return m.MCMsgAckType
	}
	return 0
}

func (m *GJ_Net_Pack_Net_Pack_Min_Net_MsgBody) GetMCMsgType() int32 {
	if m != nil {
		return m.MCMsgType
	}
	return 0
}

func (m *GJ_Net_Pack_Net_Pack_Min_Net_MsgBody) GetMSSendCount() int32 {
	if m != nil {
		return m.MSSendCount
	}
	return 0
}

func (m *GJ_Net_Pack_Net_Pack_Min_Net_MsgBody) GetMLExpireTime() uint32 {
	if m != nil {
		return m.MLExpireTime
	}
	return 0
}

func (m *GJ_Net_Pack_Net_Pack_Min_Net_MsgBody) GetMISendTimeApp() uint64 {
	if m != nil {
		return m.MISendTimeApp
	}
	return 0
}

func (m *GJ_Net_Pack_Net_Pack_Min_Net_MsgBody) GetMLResult() int32 {
	if m != nil {
		return m.MLResult
	}
	return 0
}

func (m *GJ_Net_Pack_Net_Pack_Min_Net_MsgBody) GetMLBack() uint64 {
	if m != nil {
		return m.MLBack
	}
	return 0
}

func (m *GJ_Net_Pack_Net_Pack_Min_Net_MsgBody) GetMIDiscard() int32 {
	if m != nil {
		return m.MIDiscard
	}
	return 0
}

func init() {
	proto.RegisterType((*NetReqInfo)(nil), "proto.NetReqInfo")
	proto.RegisterType((*NetRspInfo)(nil), "proto.NetRspInfo")
	proto.RegisterType((*ClientRsqInfo)(nil), "proto.ClientRsqInfo")
	proto.RegisterType((*GJ_Net_Pack)(nil), "proto.GJ_Net_Pack")
	proto.RegisterMapType((map[uint32]*GJ_Net_Pack_Net_Pack)(nil), "proto.GJ_Net_Pack.MNetPackEntry")
	proto.RegisterType((*GJ_Net_Pack_Net_Pack)(nil), "proto.GJ_Net_Pack.Net_Pack")
	proto.RegisterType((*GJ_Net_Pack_Net_Pack_Min_Net_MsgBody)(nil), "proto.GJ_Net_Pack.Net_Pack.Min_Net_MsgBody")
}

func init() { proto.RegisterFile("proto/midmsg.proto", fileDescriptor_7304c339219e1145) }

var fileDescriptor_7304c339219e1145 = []byte{
	// 533 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x93, 0xdf, 0x8a, 0xd3, 0x40,
	0x14, 0xc6, 0xcd, 0xa6, 0xe9, 0xb6, 0xa7, 0x8d, 0xee, 0x8e, 0x88, 0xa1, 0x8b, 0x10, 0xbb, 0x08,
	0x85, 0x85, 0x2e, 0xd6, 0x1b, 0xf1, 0x42, 0xe9, 0xd6, 0x45, 0x2b, 0x6d, 0x91, 0x69, 0x2f, 0xbc,
	0x0b, 0x35, 0x19, 0xcb, 0xd0, 0x39, 0x69, 0x9a, 0x49, 0x17, 0xfb, 0x0e, 0x3e, 0x85, 0x4f, 0xe9,
	0xa5, 0xcc, 0x9f, 0x4d, 0xba, 0x22, 0x8b, 0x5e, 0x65, 0xbe, 0x2f, 0xbf, 0x33, 0xe7, 0xcc, 0x39,
	0x33, 0x40, 0xb2, 0x7c, 0x53, 0x6c, 0x2e, 0x91, 0x27, 0x28, 0x57, 0x7d, 0x2d, 0x88, 0xa7, 0x3f,
	0xdd, 0x73, 0x80, 0x19, 0x2b, 0x28, 0xdb, 0x8e, 0xd3, 0x6f, 0x1b, 0xf2, 0x04, 0xea, 0x18, 0x5d,
	0x6d, 0x92, 0x7d, 0xe0, 0x84, 0x4e, 0xaf, 0x4d, 0x3d, 0x54, 0xe2, 0x16, 0x92, 0x59, 0x05, 0x51,
	0x26, 0xb3, 0x12, 0x52, 0xa2, 0xbb, 0x00, 0x7f, 0x24, 0x38, 0x4b, 0x0b, 0x2a, 0xb7, 0xf7, 0x70,
	0xc6, 0x5e, 0xec, 0x33, 0x16, 0x1c, 0x85, 0x4e, 0xcf, 0xa7, 0x1e, 0x2a, 0x61, 0xe9, 0xed, 0x38,
	0x09, 0xdc, 0xd0, 0xe9, 0x35, 0x15, 0xbd, 0x1d, 0x27, 0xdd, 0x9f, 0x1e, 0xb4, 0x3e, 0x7c, 0x8a,
	0x66, 0xac, 0x88, 0x3e, 0x2f, 0xe3, 0x35, 0x79, 0x0b, 0x80, 0xa5, 0x0a, 0x9c, 0xd0, 0xed, 0xb5,
	0x06, 0xa1, 0x39, 0x52, 0xff, 0x80, 0xeb, 0x4f, 0x67, 0xac, 0x50, 0x8b, 0xeb, 0xb4, 0xc8, 0xf7,
	0xb4, 0x81, 0x56, 0x76, 0x7e, 0xb9, 0xd0, 0x28, 0x37, 0x7b, 0x0c, 0x1e, 0x46, 0x53, 0xb9, 0xb2,
	0x05, 0xd6, 0x70, 0x2a, 0x57, 0xe4, 0x23, 0x34, 0xb5, 0xa9, 0xdb, 0xa0, 0x4a, 0x6c, 0x0d, 0x2e,
	0xfe, 0x92, 0xa0, 0xca, 0xc4, 0x53, 0xed, 0xda, 0x10, 0xda, 0x40, 0xbb, 0xea, 0xfc, 0x70, 0xe1,
	0xd1, 0x1f, 0x7f, 0xc9, 0x33, 0x55, 0xbf, 0x18, 0xca, 0x75, 0xa1, 0x3a, 0xa0, 0xf2, 0xd6, 0x68,
	0x13, 0x27, 0xd6, 0x20, 0x17, 0x70, 0x8a, 0x91, 0x98, 0xb3, 0xfc, 0x86, 0xe5, 0x73, 0xb6, 0xdd,
	0xb1, 0x34, 0x36, 0x7d, 0xaa, 0xd1, 0x13, 0x9c, 0xdc, 0xf5, 0xc9, 0x0b, 0x78, 0x68, 0xf6, 0x2a,
	0x49, 0x57, 0x93, 0xbe, 0xde, 0xaf, 0xc4, 0xce, 0xc1, 0xc7, 0x28, 0x9e, 0xca, 0xd5, 0x30, 0x5e,
	0xeb, 0xbe, 0xd7, 0x42, 0xa7, 0xe7, 0xd1, 0x36, 0x8e, 0x2a, 0xcf, 0xd4, 0xa5, 0x20, 0x4d, 0x78,
	0x9a, 0x68, 0x6a, 0x42, 0xff, 0x7e, 0x0e, 0x6d, 0x8c, 0xe4, 0x9c, 0xa5, 0xc9, 0x68, 0xb3, 0x4b,
	0x8b, 0xa0, 0xae, 0x81, 0x16, 0xce, 0x4b, 0xcb, 0xa4, 0x11, 0xd7, 0xdf, 0x33, 0x9e, 0xb3, 0x05,
	0x47, 0x16, 0x1c, 0xeb, 0xf1, 0xb6, 0x71, 0x52, 0x79, 0xa6, 0x64, 0xae, 0x82, 0x94, 0x1c, 0x66,
	0x59, 0xd0, 0xb0, 0x25, 0x8f, 0x0f, 0x4c, 0x72, 0xa6, 0x66, 0x20, 0x28, 0x93, 0x3b, 0x51, 0x04,
	0x4d, 0x9d, 0xab, 0x81, 0x13, 0xa3, 0xc9, 0x53, 0x38, 0xc6, 0x48, 0x5c, 0xa9, 0xf9, 0x83, 0x0e,
	0xae, 0xe3, 0x44, 0x29, 0x73, 0x06, 0xfe, 0x9e, 0xcb, 0x78, 0x99, 0x27, 0x41, 0xcb, 0x9e, 0x61,
	0x6c, 0x8d, 0xce, 0x17, 0xf0, 0xef, 0xdc, 0x0a, 0x72, 0x02, 0xee, 0x9a, 0x99, 0xab, 0xee, 0x53,
	0xb5, 0x24, 0x2f, 0xc1, 0xbb, 0x59, 0x8a, 0x1d, 0xb3, 0x73, 0x3f, 0xbb, 0x67, 0xee, 0xd4, 0x90,
	0x6f, 0x8e, 0x5e, 0x3b, 0x03, 0x04, 0x98, 0xf2, 0x44, 0x4d, 0x87, 0xc7, 0x8c, 0xf4, 0xa1, 0x36,
	0xdf, 0xa7, 0x31, 0x39, 0xb5, 0xd1, 0xd5, 0xfb, 0xea, 0x1c, 0x5a, 0xe6, 0x35, 0x75, 0x1f, 0x90,
	0x4b, 0xf0, 0x86, 0xf2, 0x3f, 0x02, 0x06, 0xef, 0x6e, 0x5f, 0xda, 0x41, 0xc6, 0xd1, 0x52, 0x88,
	0x7f, 0xdd, 0xe0, 0x6b, 0x5d, 0x7b, 0xaf, 0x7e, 0x07, 0x00, 0x00, 0xff, 0xff, 0x26, 0x6f, 0xfe,
	0xa7, 0x18, 0x04, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MidServiceClient is the client API for MidService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MidServiceClient interface {
	Sync(ctx context.Context, in *NetReqInfo, opts ...grpc.CallOption) (*NetRspInfo, error)
	Async(ctx context.Context, in *NetReqInfo, opts ...grpc.CallOption) (*NetRspInfo, error)
}

type midServiceClient struct {
	cc *grpc.ClientConn
}

func NewMidServiceClient(cc *grpc.ClientConn) MidServiceClient {
	return &midServiceClient{cc}
}

func (c *midServiceClient) Sync(ctx context.Context, in *NetReqInfo, opts ...grpc.CallOption) (*NetRspInfo, error) {
	out := new(NetRspInfo)
	err := c.cc.Invoke(ctx, "/proto.MidService/Sync", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *midServiceClient) Async(ctx context.Context, in *NetReqInfo, opts ...grpc.CallOption) (*NetRspInfo, error) {
	out := new(NetRspInfo)
	err := c.cc.Invoke(ctx, "/proto.MidService/Async", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MidServiceServer is the server API for MidService service.
type MidServiceServer interface {
	Sync(context.Context, *NetReqInfo) (*NetRspInfo, error)
	Async(context.Context, *NetReqInfo) (*NetRspInfo, error)
}

// UnimplementedMidServiceServer can be embedded to have forward compatible implementations.
type UnimplementedMidServiceServer struct {
}

func (*UnimplementedMidServiceServer) Sync(ctx context.Context, req *NetReqInfo) (*NetRspInfo, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Sync not implemented")
}
func (*UnimplementedMidServiceServer) Async(ctx context.Context, req *NetReqInfo) (*NetRspInfo, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Async not implemented")
}

func RegisterMidServiceServer(s *grpc.Server, srv MidServiceServer) {
	s.RegisterService(&_MidService_serviceDesc, srv)
}

func _MidService_Sync_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NetReqInfo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MidServiceServer).Sync(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.MidService/Sync",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MidServiceServer).Sync(ctx, req.(*NetReqInfo))
	}
	return interceptor(ctx, in, info, handler)
}

func _MidService_Async_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NetReqInfo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MidServiceServer).Async(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.MidService/Async",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MidServiceServer).Async(ctx, req.(*NetReqInfo))
	}
	return interceptor(ctx, in, info, handler)
}

var _MidService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.MidService",
	HandlerType: (*MidServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Sync",
			Handler:    _MidService_Sync_Handler,
		},
		{
			MethodName: "Async",
			Handler:    _MidService_Async_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/midmsg.proto",
}

// ClientServiceClient is the client API for ClientService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ClientServiceClient interface {
	Call(ctx context.Context, in *NetReqInfo, opts ...grpc.CallOption) (*NetRspInfo, error)
}

type clientServiceClient struct {
	cc *grpc.ClientConn
}

func NewClientServiceClient(cc *grpc.ClientConn) ClientServiceClient {
	return &clientServiceClient{cc}
}

func (c *clientServiceClient) Call(ctx context.Context, in *NetReqInfo, opts ...grpc.CallOption) (*NetRspInfo, error) {
	out := new(NetRspInfo)
	err := c.cc.Invoke(ctx, "/proto.ClientService/Call", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ClientServiceServer is the server API for ClientService service.
type ClientServiceServer interface {
	Call(context.Context, *NetReqInfo) (*NetRspInfo, error)
}

// UnimplementedClientServiceServer can be embedded to have forward compatible implementations.
type UnimplementedClientServiceServer struct {
}

func (*UnimplementedClientServiceServer) Call(ctx context.Context, req *NetReqInfo) (*NetRspInfo, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Call not implemented")
}

func RegisterClientServiceServer(s *grpc.Server, srv ClientServiceServer) {
	s.RegisterService(&_ClientService_serviceDesc, srv)
}

func _ClientService_Call_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NetReqInfo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClientServiceServer).Call(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ClientService/Call",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClientServiceServer).Call(ctx, req.(*NetReqInfo))
	}
	return interceptor(ctx, in, info, handler)
}

var _ClientService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.ClientService",
	HandlerType: (*ClientServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Call",
			Handler:    _ClientService_Call_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/midmsg.proto",
}
